/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { TestFacet2, TestFacet2Interface } from "../../facets/TestFacet2";

const _abi = [
  {
    inputs: [],
    name: "test2Func1",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "va",
        type: "uint256",
      },
    ],
    name: "test2Func2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "test2Func3",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761023f908161001c8239f35b600080fdfe6080604090808252600436101561001557600080fd5b600090813560e01c9081630e4cd7fc146101eb57508063b8944690146101d15763ea36b5581461004457600080fd5b346101ce57806003193601126101ce5781519181927fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e92835494600186811c958188169788156101c4575b60209889891081146101b05788875289939291811561018c5750600114610137575b50505082939450601f801994859203011682019482861067ffffffffffffffff8711176101235785929391838652818452845191828186015281955b83871061010b5750508394508582601f949501015201168101030190f35b868101820151898801890152958101958895506100ed565b634e487b7160e01b82526041600452602482fd5b845290915082907fb5c239a29faf02594141bbc5e6982a9b85ba2b4d59c3ed3baaf4cb8e5e11cbef5b87831061017957509495508594508301018538806100b1565b8054868401850152918301918101610160565b60ff191684880152509596879650151560051b8501909101915086905038806100b1565b634e487b7160e01b86526022600452602486fd5b96607f169661008f565b80fd5b50346101ce5760203660031901126101ce57600435815580f35b905034610205578160031936011261020557602091548152f35b5080fdfea26469706673582212202f010faa62643962116e947a0690d6392a82a23a9d54cd360503414727fde9fa64736f6c63430008130033";

type TestFacet2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestFacet2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestFacet2__factory extends ContractFactory {
  constructor(...args: TestFacet2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestFacet2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestFacet2__factory {
    return super.connect(runner) as TestFacet2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestFacet2Interface {
    return new Interface(_abi) as TestFacet2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestFacet2 {
    return new Contract(address, _abi, runner) as unknown as TestFacet2;
  }
}
