/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../../../contracts/facets/DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "_facetFunctionSelectors",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576107d8908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816352ef6b2c1461005a575080637a0ed62714610055578063adfca15e146100505763cdffacc61461004b57600080fd5b610557565b610496565b61027d565b3461017c578060031936011261017c57600080516020610783833981519152546100838161065d565b90829083905b8082106100a557828452604051806100a1868261017f565b0390f35b90916100d86100cb6100c66100b9866106c5565b90549060031b1c60e01b90565b610716565b546001600160a01b031690565b856001600160a01b038216815b848110610133575b5050610128578161011761011c92610108610122958961075b565b6001600160a01b039091169052565b61069b565b9261069b565b90610089565b50916101229061069b565b61015c610150610143838b61075b565b516001600160a01b031690565b6001600160a01b031690565b82146101705761016b9061069b565b6100e5565b505050600187806100ed565b80fd5b6020908160408183019282815285518094520193019160005b8281106101a6575050505090565b83516001600160a01b031685529381019392810192600101610198565b90815180825260208080930193019160005b8281106101e3575050505090565b83516001600160e01b031916855293810193928101926001016101d5565b602080820190808352835180925260409283810182858560051b8401019601946000925b858410610236575050505050505090565b90919293949596858061026c600193603f1986820301885286838d51878060a01b038151168452015191818582015201906101c3565b990194019401929594939190610225565b3461047d5760008060031936011261017c57600080516020610783833981519152546102a8816105f4565b906102b28161065d565b92809181905b8082106103175750505b8181106102da57818352604051806100a18582610201565b806102fd6102f66102ee610312948861075b565b5161ffff1690565b61ffff1690565b6020610309838761075b565b5101515261069b565b6102c2565b90926103256100b9856106c5565b6103316100cb82610716565b846001600160a01b038216815b8581106103e0575b50506103d457916103b56103c8926103756103ce95610365858c61075b565b516001600160a01b039091169052565b6103a5836103828861065d565b8b610390602093849261075b565b51015261039d858c61075b565b51015161074e565b6001600160e01b03199091169052565b6101176103c2828a61075b565b60019052565b9361069b565b906102b8565b5050926103ce9061069b565b8a858b846104026101506103f4878561075b565b51516001600160a01b031690565b14610418575050506104139061069b565b61033e565b6104749550838095506104649361045a61045f946103a5602061044161046b9a6102ee9861075b565b5101516104546102f66102ee888861075b565b9061075b565b61075b565b61076f565b918b61075b565b9061ffff169052565b60013880610346565b600080fd5b9060206104939281815201906101c3565b90565b3461047d57602036600319011261047d576001600160a01b036004358181169081900361047d5760008051602061078383398151915254916000906104da8461065d565b92825b8581106104f557838552604051806100a18782610482565b6104fe816106c5565b90549060031b1c60e01b8361051282610716565b5416831461052a575b506105259061069b565b6104dd565b846105509161053d61052594978961075b565b6001600160e01b0319909116905261069b565b939061051b565b3461047d57602036600319011261047d576004356001600160e01b03198116810361047d576020906001600160a01b039061059190610716565b5416604051908152f35b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176105d757604052565b61059b565b67ffffffffffffffff81116105d75760051b60200190565b90610606610601836105dc565b6105b1565b8281528092610617601f19916105dc565b016000805b8281106106295750505050565b604090815182810181811067ffffffffffffffff8211176105d757602093528381528260608183015282870101520161061c565b9061066a610601836105dc565b828152809261067b601f19916105dc565b0190602036910137565b634e487b7160e01b600052601160045260246000fd5b60001981146106aa5760010190565b610685565b634e487b7160e01b600052603260045260246000fd5b90600080516020610783833981519152805483101561071157600052601c8260031c7fc0d727610ea16241eff4447d08bb1b4595f7d2ec4515282437a13b7d0df4b922019260021b1690565b6106af565b63ffffffff60e01b166000527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604060002090565b8051156107115760200190565b80518210156107115760209160051b010190565b61ffff8091169081146106aa576001019056fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131da2646970667358221220830ef343fcc7d83a81e5b8e73b3bdc6cc511bfee130a36ba1f480abd904d34e064736f6c63430008130033";

type DiamondLoupeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondLoupeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(...args: DiamondLoupeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DiamondLoupeFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DiamondLoupeFacet__factory {
    return super.connect(runner) as DiamondLoupeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, runner) as unknown as DiamondLoupeFacet;
  }
}
