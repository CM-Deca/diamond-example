/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  AppDia,
  AppDiaInterface,
  IDiamond,
  DiamondArgsStruct,
} from "../../../diamond/AppDia.sol/AppDia";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamond.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamond.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "init",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "initCalldata",
            type: "bytes",
          },
        ],
        internalType: "struct DiamondArgs",
        name: "_args",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotAddFunctionToDiamondThatAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "_selectors",
        type: "bytes4[]",
      },
    ],
    name: "CannotAddSelectorsToZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotRemoveFunctionThatDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotRemoveImmutableFunction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotReplaceFunctionThatDoesNotExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "_selectors",
        type: "bytes4[]",
      },
    ],
    name: "CannotReplaceFunctionsFromFacetWithZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotReplaceImmutableFunction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "FunctionNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_action",
        type: "uint8",
      },
    ],
    name: "IncorrectFacetCutAction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initializationContractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "InitializationFunctionReverted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "NoBytecodeAtAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facetAddress",
        type: "address",
      },
    ],
    name: "NoSelectorsProvidedForFacetForCut",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facetAddress",
        type: "address",
      },
    ],
    name: "RemoveFacetAddressMustBeZeroAddress",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052604051610f7a380380610f7a83398101604081905261002291610a21565b61003b828260200151836040015161004260201b60201c565b5050610e07565b60005b83518110156101ac57600084828151811061006257610062610bc2565b6020026020010151604001519050600085838151811061008457610084610bc2565b602002602001015160000151905081516000036100c45760405163e767f91f60e01b81526001600160a01b03821660048201526024015b60405180910390fd5b60008684815181106100d8576100d8610bc2565b6020026020010151602001519050600060028111156100f9576100f9610bd8565b81600281111561010b5761010b610bd8565b0361011f5761011a82846101f7565b610196565b600181600281111561013357610133610bd8565b036101425761011a82846103aa565b600281600281111561015657610156610bd8565b036101655761011a828461053d565b80600281111561017757610177610bd8565b604051633ff4d20f60e11b815260ff90911660048201526024016100bb565b50505080806101a490610c04565b915050610045565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516101e093929190610c8e565b60405180910390a16101f282826107c6565b505050565b6001600160a01b03821661022057806040516302b8da0760e21b81526004016100bb9190610d57565b600080516020610f328339815191525460408051606081019091526024808252600080516020610eee833981519152929161026591869190610f0e602083013961086a565b60005b83518110156103a357600084828151811061028557610285610bc2565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156102e25760405163ebbf5d0760e01b81526001600160e01b0319831660048201526024016100bb565b6040805180820182526001600160a01b03808a16825261ffff80881660208085019182526001600160e01b0319881660009081528b8252958620945185549251909316600160a01b026001600160b01b0319909216929093169190911717909155600180880180549182018155835291206008820401805460e085901c60046007909416939093026101000a92830263ffffffff90930219169190911790558361038b81610d71565b9450505050808061039b90610c04565b915050610268565b5050505050565b600080516020610eee8339815191526001600160a01b0383166103e2578160405163cd98a96f60e01b81526004016100bb9190610d57565b61040483604051806060016040528060288152602001610f526028913961086a565b60005b825181101561053757600083828151811061042457610424610bc2565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b031630810361048257604051632901806d60e11b81526001600160e01b0319831660048201526024016100bb565b856001600160a01b0316816001600160a01b0316036104c057604051631ac6ce8d60e11b81526001600160e01b0319831660048201526024016100bb565b6001600160a01b0381166104f357604051637479f93960e01b81526001600160e01b0319831660048201526024016100bb565b506001600160e01b031916600090815260208390526040902080546001600160a01b0319166001600160a01b0386161790558061052f81610c04565b915050610407565b50505050565b600080516020610f3283398151915254600080516020610eee833981519152906001600160a01b038416156105905760405163d091bc8160e01b81526001600160a01b03851660048201526024016100bb565b60005b83518110156103a35760008482815181106105b0576105b0610bc2565b6020908102919091018101516001600160e01b0319811660009081528683526040908190208151808301909252546001600160a01b038116808352600160a01b90910461ffff16938201939093529092509061062b57604051637a08a22d60e01b81526001600160e01b0319831660048201526024016100bb565b8051306001600160a01b039091160361066357604051630df5fd6160e31b81526001600160e01b0319831660048201526024016100bb565b8361066d81610d92565b94505083816020015161ffff161461074b57600085600101858154811061069657610696610bc2565b90600052602060002090600891828204019190066004029054906101000a900460e01b90508086600101836020015161ffff16815481106106d9576106d9610bc2565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c92909202939093179055838201516001600160e01b03199390931681529087905260409020805461ffff60a01b1916600160a01b61ffff909316929092029190911790555b8460010180548061075e5761075e610da9565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319909316815291859052506040902080546001600160b01b0319169055806107be81610c04565b915050610593565b6001600160a01b0382166107d8575050565b600080836001600160a01b0316836040516107f39190610dbf565b600060405180830381855af49150503d806000811461082e576040519150601f19603f3d011682016040523d82523d6000602084013e610833565b606091505b5091509150816105375780511561084d5780518082602001fd5b838360405163192105d760e01b81526004016100bb929190610ddb565b813b60008190036101f257828260405163919834b960e01b81526004016100bb929190610ddb565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156108ca576108ca610892565b60405290565b604051601f8201601f191681016001600160401b03811182821017156108f8576108f8610892565b604052919050565b60006001600160401b0382111561091957610919610892565b5060051b60200190565b80516001600160a01b038116811461093a57600080fd5b919050565b60005b8381101561095a578181015183820152602001610942565b50506000910152565b60006060828403121561097557600080fd5b61097d6108a8565b905061098882610923565b81526020610997818401610923565b8282015260408301516001600160401b03808211156109b557600080fd5b818501915085601f8301126109c957600080fd5b8151818111156109db576109db610892565b6109ed601f8201601f191685016108d0565b91508082528684828501011115610a0357600080fd5b610a128185840186860161093f565b50604084015250909392505050565b60008060408385031215610a3457600080fd5b82516001600160401b0380821115610a4b57600080fd5b818501915085601f830112610a5f57600080fd5b81516020610a74610a6f83610900565b6108d0565b82815260059290921b84018101918181019089841115610a9357600080fd5b8286015b84811015610b9157805186811115610aae57600080fd5b87016060818d03601f19011215610ac457600080fd5b610acc6108a8565b610ad7868301610923565b8152604082015160038110610aeb57600080fd5b81870152606082015188811115610b0157600080fd5b8083019250508c603f830112610b1657600080fd5b85820151610b26610a6f82610900565b81815260059190911b830160400190878101908f831115610b4657600080fd5b6040850194505b82851015610b7c5784516001600160e01b031981168114610b6d57600080fd5b82529388019390880190610b4d565b60408401525050845250918301918301610a97565b5091880151919650909350505080821115610bab57600080fd5b50610bb885828601610963565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610c1657610c16610bee565b5060010190565b600081518084526020808501945080840160005b83811015610c575781516001600160e01b03191687529582019590820190600101610c31565b509495945050505050565b60008151808452610c7a81602086016020860161093f565b601f01601f19169290920160200192915050565b6000606080830181845280875180835260808601915060808160051b87010192506020808a016000805b84811015610d2757898703607f19018652825180516001600160a01b031688528481015160038110610cf857634e487b7160e01b84526021600452602484fd5b88860152604090810151908801899052610d1489890182610c1d565b9750509483019491830191600101610cb8565b5050506001600160a01b0389169087015250508381036040850152610d4c8186610c62565b979650505050505050565b602081526000610d6a6020830184610c1d565b9392505050565b600061ffff808316818103610d8857610d88610bee565b6001019392505050565b600081610da157610da1610bee565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251610dd181846020870161093f565b9190910192915050565b6001600160a01b0383168152604060208201819052600090610dff90830184610c62565b949350505050565b60d980610e156000396000f3fe608060405236600a57005b600080356001600160e01b03191681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602081905260409091205481906001600160a01b031680608057604051630a82dd7360e31b81526001600160e01b031960003516600482015260240160405180910390fd5b3660008037600080366000845af43d6000803e808015609e573d6000f35b3d6000fdfea26469706673582212203941392e506f3363b709ef2475dcc93ea8e90553bfa24ef677117c435b4160d764736f6c63430008130033c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c4c69624469616d6f6e644375743a2041646420666163657420686173206e6f20636f6465c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d4c69624469616d6f6e644375743a205265706c61636520666163657420686173206e6f20636f6465";

type AppDiaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AppDiaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AppDia__factory extends ContractFactory {
  constructor(...args: AppDiaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _diamondCut: IDiamond.FacetCutStruct[],
    _args: DiamondArgsStruct,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_diamondCut, _args, overrides || {});
  }
  override deploy(
    _diamondCut: IDiamond.FacetCutStruct[],
    _args: DiamondArgsStruct,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_diamondCut, _args, overrides || {}) as Promise<
      AppDia & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AppDia__factory {
    return super.connect(runner) as AppDia__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AppDiaInterface {
    return new Interface(_abi) as AppDiaInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AppDia {
    return new Contract(address, _abi, runner) as unknown as AppDia;
  }
}
