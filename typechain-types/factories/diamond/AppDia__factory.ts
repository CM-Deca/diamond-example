/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  AppDia,
  AppDiaInterface,
  IDiamond,
  DiamondArgsStruct,
} from "../../diamond/AppDia";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamond.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamond.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "init",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "initCalldata",
            type: "bytes",
          },
        ],
        internalType: "struct DiamondArgs",
        name: "_args",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotAddFunctionToDiamondThatAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "_selectors",
        type: "bytes4[]",
      },
    ],
    name: "CannotAddSelectorsToZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotRemoveFunctionThatDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotRemoveImmutableFunction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotReplaceFunctionThatDoesNotExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "_selectors",
        type: "bytes4[]",
      },
    ],
    name: "CannotReplaceFunctionsFromFacetWithZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotReplaceImmutableFunction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "FunctionNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_action",
        type: "uint8",
      },
    ],
    name: "IncorrectFacetCutAction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initializationContractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "InitializationFunctionReverted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "NoBytecodeAtAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facetAddress",
        type: "address",
      },
    ],
    name: "NoSelectorsProvidedForFacetForCut",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facetAddress",
        type: "address",
      },
    ],
    name: "RemoveFacetAddressMustBeZeroAddress",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x604060808152610f3980380380610015816101e3565b928339810182828203126100af5781516001600160401b0392908381116100af5781019180601f840112156100af5782519261005861005385610208565b6101e3565b84815293602091600591821b8101830191838701918584116100af57848101925b8484106100b45750505050508201519384116100af576100a39361009d9201610271565b90610397565b5160bb9081610e3e8239f35b600080fd5b83518a81116100af57820160609081601f19828b0301126100af576100d76101a0565b916100e389830161021f565b83528d82015160038110156100af5789840152810151908c82116100af570188603f820112156100af57878101518d9161011f61005383610208565b928a848481520192881b820101908b82116100af57918f959391868c969401915b81831061015a575050508394820152815201930192610079565b9193955091939550825163ffffffff60e01b811681036100af57818c92918392520192018f9593918b9593610140565b634e487b7160e01b600052604160045260246000fd5b60405190606082016001600160401b038111838210176101bf57604052565b61018a565b60408051919082016001600160401b038111838210176101bf57604052565b6040519190601f01601f191682016001600160401b038111838210176101bf57604052565b6001600160401b0381116101bf5760051b60200190565b51906001600160a01b03821682036100af57565b6001600160401b0381116101bf57601f01601f191660200190565b60005b8381106102615750506000910152565b8181015183820152602001610251565b91906060838203126100af576102856101a0565b9261028f8161021f565b845261029d6020820161021f565b60208501526040810151906001600160401b0382116100af570181601f820112156100af5780516102d061005382610233565b92818452602082840101116100af576102ef916020808501910161024e565b6040830152565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e80546001908181811c9116801561038d575b602082101461037757601f811161034b575b5050600662185cd960ea1b019055565b82600052601f6020600020910160051c8101905b81811061036c575061033b565b60008155820161035f565b634e487b7160e01b600052602260045260246000fd5b90607f1690610329565b60208281015160409384015191946001600160a01b03909116939160005b84518110156104bd57836103c9828761054a565b5101516103e76103d9838861054a565b51516001600160a01b031690565b81511561049b57610403896103fc858a61054a565b5101610583565b61040c81610563565b8061042a57506104259291610420916107ae565b610520565b6103b5565b61043381610563565b6001810361044a575061042592916104209161097b565b61045381610563565b6002810361046a5750610425929161042091610b55565b808761047861049793610563565b51633ff4d20f60e11b815260ff90911660048201529081906024820190565b0390fd5b855163e767f91f60e01b81526001600160a01b03919091166004820152602490fd5b50927f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67391955093610500946104f885839551938493846105f3565b0390a1610d80565b6105086102f6565b565b634e487b7160e01b600052601160045260246000fd5b600019811461052f5760010190565b61050a565b634e487b7160e01b600052603260045260246000fd5b805182101561055e5760209160051b010190565b610534565b6003111561056d57565b634e487b7160e01b600052602160045260246000fd5b51600381101561056d5790565b90815180825260208080930193019160005b8281106105b0575050505090565b83516001600160e01b031916855293810193928101926001016105a2565b906020916105e78151809281855285808601910161024e565b601f01601f1916010190565b93929091936060928382019380835281518095526080830160808660051b85010195602080940192600080915b8383106106555750505050505061065294956106459183019060018060a01b03169052565b60408184039101526105ce565b90565b909192939498607f1988820301865289519060018060a01b0382511681528782015160038110156106b0576106a260019385848c9594868096015281604080940151938201520190610590565b9b0196019493019190610620565b634e487b7160e01b85526021600452602485fd5b906020610652928181520190610590565b6106dd6101a0565b906024825263636f646560e01b6040837f4c69624469616d6f6e644375743a2041646420666163657420686173206e6f2060208201520152565b90600080516020610f19833981519152805483101561055e57600052601c60206000208360031c019260021b1690565b600080516020610f1983398151915290815491680100000000000000008310156101bf578261077e91600161050895019055610717565b90919063ffffffff83549160031b9260e01c831b921b1916179055565b61ffff80911690811461052f5760010190565b91906001600160a01b0383161561091857600080516020610f198339815191525461ffff16906107e56107df6106d5565b85610dfe565b6000915b81518310156109115761080d6107ff848461054a565b516001600160e01b03191690565b61085661084a61083d8363ffffffff60e01b16600052600080516020610ef9833981519152602052604060002090565b546001600160a01b031690565b6001600160a01b031690565b6108ed576108e7916108dc6108e1926108d76108706101c4565b6001600160a01b038b8116825261ffff861660208084019182526001600160e01b031986166000908152600080516020610ef98339815191529091526040902092518354915192166001600160b01b03199091161760a09190911b61ffff60a01b16179055565b610747565b61079b565b92610520565b916107e9565b60405163ebbf5d0760e01b81526001600160e01b0319919091166004820152602490fd5b5050509050565b6040516302b8da0760e21b815290819061049790600483016106c4565b61093d6101a0565b906028825267206e6f20636f646560c01b6040837f4c69624469616d6f6e644375743a205265706c6163652066616365742068617360208201520152565b6001600160a01b03811692918315610ab85761099e610998610935565b83610dfe565b60005b8151811015610911576109b76107ff828461054a565b6109e761084a61083d8363ffffffff60e01b16600052600080516020610ef9833981519152602052604060002090565b308114610a9657868114610a745715610a50579061042084610a2c610a4b9463ffffffff60e01b16600052600080516020610ef9833981519152602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b6109a1565b604051637479f93960e01b81526001600160e01b0319919091166004820152602490fd5b604051631ac6ce8d60e11b81526001600160e01b031983166004820152602490fd5b604051632901806d60e11b81526001600160e01b031983166004820152602490fd5b60405163cd98a96f60e01b815290819061049790600483016106c4565b9061ffff610ae16101c4565b92546001600160a01b038116845260a01c166020830152565b801561052f576000190190565b600080516020610f1983398151915280548015610b3f576000190190610b2c82610717565b63ffffffff82549160031b1b1916905555565b634e487b7160e01b600052603160045260246000fd5b600080516020610f19833981519152549291906001600160a01b038116610d3b5750600090815b815181101561091157610b926107ff828461054a565b94610bc5610bc08763ffffffff60e01b16600052600080516020610ef9833981519152602052604060002090565b610ad5565b8051909190610bdc906001600160a01b031661084a565b15610d195781513090610bf7906001600160a01b031661084a565b14610cf757610c5c602097610c629493610c118894610afa565b998a91018161ffff610c25835161ffff1690565b1603610c67575b5050610c36610b07565b63ffffffff60e01b16600052600080516020610ef9833981519152602052604060002090565b55610520565b610b7c565b610cd1610caa610c89610c7c610cf095610717565b90549060031b1c60e01b90565b92610ca28461077e610c9d845161ffff1690565b610717565b5161ffff1690565b9163ffffffff60e01b16600052600080516020610ef9833981519152602052604060002090565b805461ffff60a01b191660a09290921b61ffff60a01b16919091179055565b8838610c2c565b604051630df5fd6160e31b81526001600160e01b031988166004820152602490fd5b604051637a08a22d60e01b81526001600160e01b031988166004820152602490fd5b60405163d091bc8160e01b81526001600160a01b03919091166004820152602490fd5b6001600160a01b039091168152604060208201819052610652929101906105ce565b906001600160a01b03821615610dfa57600080825160208401855af4913d15610df2573d92610db161005385610233565b9384523d6000602086013e5b15610dc757505050565b825115610dd657825160208401fd5b61049760405192839263192105d760e01b845260048401610d5e565b606092610dbd565b5050565b803b15610e09575050565b6040805163919834b960e01b81526001600160a01b03909216600483015260248201529081906104979060448301906105ce56fe60806040523615608357600080356001600160e01b0319168082527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c60205260408220546001600160a01b0316908115606f5750818091368280378136915af43d82803e15606b573d90f35b3d90fd5b630a82dd7360e31b60805260845260246080fd5b00fea2646970667358221220e278d8730162dec4d4c22d3db4b81b875719036eb2f8ef088f4086fc7df60c8664736f6c63430008130033c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131cc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d";

type AppDiaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AppDiaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AppDia__factory extends ContractFactory {
  constructor(...args: AppDiaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _diamondCut: IDiamond.FacetCutStruct[],
    _args: DiamondArgsStruct,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_diamondCut, _args, overrides || {});
  }
  override deploy(
    _diamondCut: IDiamond.FacetCutStruct[],
    _args: DiamondArgsStruct,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_diamondCut, _args, overrides || {}) as Promise<
      AppDia & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AppDia__factory {
    return super.connect(runner) as AppDia__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AppDiaInterface {
    return new Interface(_abi) as AppDiaInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AppDia {
    return new Contract(address, _abi, runner) as unknown as AppDia;
  }
}
