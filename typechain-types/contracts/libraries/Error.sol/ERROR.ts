/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../../common";

export interface ERRORInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "APP_NOT_EXIST_ban_check"
      | "APP_NOT_EXIST_ban_user"
      | "APP_NOT_EXIST_decrease_point"
      | "APP_NOT_EXIST_decrease_point_score"
      | "APP_NOT_EXIST_decrease_score"
      | "APP_NOT_EXIST_get_point"
      | "APP_NOT_EXIST_get_point_score"
      | "APP_NOT_EXIST_get_score"
      | "APP_NOT_EXIST_get_user"
      | "APP_NOT_EXIST_increase_point"
      | "APP_NOT_EXIST_increase_point_score"
      | "APP_NOT_EXIST_increase_score"
      | "APP_NOT_EXIST_remove_app"
      | "APP_NOT_EXIST_set_point"
      | "APP_NOT_EXIST_set_point_score"
      | "APP_NOT_EXIST_set_score"
      | "BANNED_ACCOUNT_decrease_point"
      | "BANNED_ACCOUNT_decrease_point_score"
      | "BANNED_ACCOUNT_decrease_score"
      | "BANNED_ACCOUNT_get_point"
      | "BANNED_ACCOUNT_get_point_score"
      | "BANNED_ACCOUNT_get_score"
      | "BANNED_ACCOUNT_get_user"
      | "BANNED_ACCOUNT_increase_point"
      | "BANNED_ACCOUNT_increase_point_score"
      | "BANNED_ACCOUNT_increase_score"
      | "BANNED_ACCOUNT_set_point"
      | "BANNED_ACCOUNT_set_point_score"
      | "BANNED_ACCOUNT_set_score"
      | "HAS_NOT_CREDIT"
      | "NO_HISTORY"
      | "NO_PERMISSIONAUTH_DAPP"
      | "NO_PERMISSIONAUTH_DAPPUPGRADE"
      | "NO_PERMISSION_DAPP"
      | "NO_PERMISSION_DAPPUPGRADE"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_ban_check",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_ban_user",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_decrease_point",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_decrease_point_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_decrease_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_get_point",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_get_point_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_get_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_get_user",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_increase_point",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_increase_point_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_increase_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_remove_app",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_set_point",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_set_point_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "APP_NOT_EXIST_set_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANNED_ACCOUNT_decrease_point",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANNED_ACCOUNT_decrease_point_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANNED_ACCOUNT_decrease_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANNED_ACCOUNT_get_point",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANNED_ACCOUNT_get_point_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANNED_ACCOUNT_get_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANNED_ACCOUNT_get_user",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANNED_ACCOUNT_increase_point",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANNED_ACCOUNT_increase_point_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANNED_ACCOUNT_increase_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANNED_ACCOUNT_set_point",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANNED_ACCOUNT_set_point_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANNED_ACCOUNT_set_score",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "HAS_NOT_CREDIT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "NO_HISTORY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "NO_PERMISSIONAUTH_DAPP",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "NO_PERMISSIONAUTH_DAPPUPGRADE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "NO_PERMISSION_DAPP",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "NO_PERMISSION_DAPPUPGRADE",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_ban_check",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_ban_user",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_decrease_point",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_decrease_point_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_decrease_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_get_point",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_get_point_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_get_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_get_user",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_increase_point",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_increase_point_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_increase_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_remove_app",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_set_point",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_set_point_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "APP_NOT_EXIST_set_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANNED_ACCOUNT_decrease_point",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANNED_ACCOUNT_decrease_point_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANNED_ACCOUNT_decrease_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANNED_ACCOUNT_get_point",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANNED_ACCOUNT_get_point_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANNED_ACCOUNT_get_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANNED_ACCOUNT_get_user",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANNED_ACCOUNT_increase_point",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANNED_ACCOUNT_increase_point_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANNED_ACCOUNT_increase_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANNED_ACCOUNT_set_point",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANNED_ACCOUNT_set_point_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANNED_ACCOUNT_set_score",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "HAS_NOT_CREDIT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "NO_HISTORY", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "NO_PERMISSIONAUTH_DAPP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "NO_PERMISSIONAUTH_DAPPUPGRADE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "NO_PERMISSION_DAPP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "NO_PERMISSION_DAPPUPGRADE",
    data: BytesLike
  ): Result;
}

export interface ERROR extends BaseContract {
  connect(runner?: ContractRunner | null): ERROR;
  waitForDeployment(): Promise<this>;

  interface: ERRORInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  APP_NOT_EXIST_ban_check: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_ban_user: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_decrease_point: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_decrease_point_score: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_decrease_score: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_get_point: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_get_point_score: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_get_score: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_get_user: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_increase_point: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_increase_point_score: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_increase_score: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_remove_app: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_set_point: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_set_point_score: TypedContractMethod<[], [bigint], "view">;

  APP_NOT_EXIST_set_score: TypedContractMethod<[], [bigint], "view">;

  BANNED_ACCOUNT_decrease_point: TypedContractMethod<[], [bigint], "view">;

  BANNED_ACCOUNT_decrease_point_score: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  BANNED_ACCOUNT_decrease_score: TypedContractMethod<[], [bigint], "view">;

  BANNED_ACCOUNT_get_point: TypedContractMethod<[], [bigint], "view">;

  BANNED_ACCOUNT_get_point_score: TypedContractMethod<[], [bigint], "view">;

  BANNED_ACCOUNT_get_score: TypedContractMethod<[], [bigint], "view">;

  BANNED_ACCOUNT_get_user: TypedContractMethod<[], [bigint], "view">;

  BANNED_ACCOUNT_increase_point: TypedContractMethod<[], [bigint], "view">;

  BANNED_ACCOUNT_increase_point_score: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  BANNED_ACCOUNT_increase_score: TypedContractMethod<[], [bigint], "view">;

  BANNED_ACCOUNT_set_point: TypedContractMethod<[], [bigint], "view">;

  BANNED_ACCOUNT_set_point_score: TypedContractMethod<[], [bigint], "view">;

  BANNED_ACCOUNT_set_score: TypedContractMethod<[], [bigint], "view">;

  HAS_NOT_CREDIT: TypedContractMethod<[], [bigint], "view">;

  NO_HISTORY: TypedContractMethod<[], [bigint], "view">;

  NO_PERMISSIONAUTH_DAPP: TypedContractMethod<[], [bigint], "view">;

  NO_PERMISSIONAUTH_DAPPUPGRADE: TypedContractMethod<[], [bigint], "view">;

  NO_PERMISSION_DAPP: TypedContractMethod<[], [bigint], "view">;

  NO_PERMISSION_DAPPUPGRADE: TypedContractMethod<[], [bigint], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "APP_NOT_EXIST_ban_check"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_ban_user"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_decrease_point"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_decrease_point_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_decrease_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_get_point"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_get_point_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_get_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_get_user"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_increase_point"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_increase_point_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_increase_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_remove_app"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_set_point"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_set_point_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "APP_NOT_EXIST_set_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BANNED_ACCOUNT_decrease_point"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BANNED_ACCOUNT_decrease_point_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BANNED_ACCOUNT_decrease_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BANNED_ACCOUNT_get_point"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BANNED_ACCOUNT_get_point_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BANNED_ACCOUNT_get_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BANNED_ACCOUNT_get_user"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BANNED_ACCOUNT_increase_point"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BANNED_ACCOUNT_increase_point_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BANNED_ACCOUNT_increase_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BANNED_ACCOUNT_set_point"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BANNED_ACCOUNT_set_point_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BANNED_ACCOUNT_set_score"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "HAS_NOT_CREDIT"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "NO_HISTORY"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "NO_PERMISSIONAUTH_DAPP"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "NO_PERMISSIONAUTH_DAPPUPGRADE"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "NO_PERMISSION_DAPP"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "NO_PERMISSION_DAPPUPGRADE"
  ): TypedContractMethod<[], [bigint], "view">;

  filters: {};
}
